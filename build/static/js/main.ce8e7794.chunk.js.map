{"version":3,"sources":["Components/SendForm/SendForm.module.css","Components/RequestHistoryTable/RequestHistoryTable.module.css","assets/pointer.svg","Components/YandexMap/YandexMap.tsx","api/api.ts","redux/map-reducer.ts","Components/Popover/PopoverMessage.tsx","Components/SendForm/SendForm.tsx","Components/RequestHistoryTable/RequestHistoryTable.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx","Components/YandexMap/YandexMap.module.css"],"names":["module","exports","YandexMap","React","memo","getMapCoordinates","displayObjects","className","s","yandexMap","Map","onDblClick","e","state","center","zoom","options","position","right","top","left","map","obj","geometry","latitude","longitude","modules","properties","hintContent","address","balloonContent","lastPointDistance","iconLayout","iconImageHref","pointer","iconImageSize","iconImageOffset","yandexInstance","axios","create","baseURL","objectsYandexAPI","get","interceptors","request","use","config","a","params","apikey","format","error","Promise","reject","googleInstance","objectsGoogleAPI","previousCoordinates","initialState","actions","newObject","type","PopoverMessage","useState","isOpen","setIsOpen","setTimeout","Popover","open","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","SendForm","currentObject","useEffect","setPreviousCoordinates","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","geocodeData","data","response","GeoObjectCollection","featureMember","GeoObject","metaDataProperty","GeocoderMetaData","Address","formatted","geocodeNewObject","sendForm","handleSubmit","noValidate","TextField","variant","margin","required","fullWidth","id","name","label","autoFocus","onChange","handleChange","value","Button","color","RequestHistoryTable","rows","useSelector","mapPage","console","log","historyTable","style","height","width","columns","pageSize","field","headerName","description","valueGetter","getValue","App","setCurrentObject","useCallback","newObjectCoordinates","v1","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce8e7794.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sendForm\":\"SendForm_sendForm__15Va5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"historyTable\":\"RequestHistoryTable_historyTable__39tiS\"};","export default __webpack_public_path__ + \"static/media/pointer.8c1cae95.svg\";","import React from 'react';\r\nimport s from './YandexMap.module.css'\r\nimport {Map, RulerControl, Placemark, TypeSelector, YMaps, ZoomControl} from 'react-yandex-maps';\r\nimport {DisplayObjectType} from '../../redux/map-reducer';\r\nimport pointer from './../../assets/pointer.svg';\r\n\r\ntype YandexMapPorpsType = {\r\n  getMapCoordinates: (e: any) => void\r\n  displayObjects: Array<DisplayObjectType>\r\n}\r\nexport const YandexMap = React.memo(({getMapCoordinates, displayObjects}: YandexMapPorpsType) => {\r\n  return (\r\n    <div className={s.yandexMap}>\r\n      <YMaps>\r\n        <div>\r\n          <Map className={s.Map}\r\n               onDblClick={(e:any) => {\r\n                 getMapCoordinates(e)\r\n               }}\r\n               state={{center: [53.905957, 27.556118], zoom: 20}}>\r\n            <ZoomControl options={{position: {right: 10, top: 10}}}/>\r\n            <TypeSelector options={{position: {left: 10, top: 10}}}/>\r\n            <RulerControl options={{position: {right: 50, top: 10}}}/>\r\n            {/*    {props.displaySearchObjects.map((displaySearchObject: displaySearchObjectType) => <Placemark\r\n                geometry={[displaySearchObject.newSchoolLatitude, displaySearchObject.newSchoolLongitude]}\r\n                modules={['geoObject.addon.balloon', 'geoObject.addon.hint']}\r\n                properties={{\r\n                  hintContent: displaySearchObject.schoolName,\r\n                  balloonContent: displaySearchObject.description,\r\n                }}\r\n                options={{\r\n                  iconLayout: 'default#image',\r\n                  iconImageHref: pointer,\r\n                  iconImageSize: [40, 50],\r\n                  iconImageOffset: [-20, -55],\r\n                }}\r\n              />\r\n            )}*/}\r\n             {displayObjects.map((obj: DisplayObjectType) => <Placemark\r\n                geometry={[+obj.latitude, +obj.longitude]}\r\n                modules={['geoObject.addon.balloon', 'geoObject.addon.hint']}\r\n                properties={{\r\n                  hintContent: obj.address,\r\n                  balloonContent: obj.lastPointDistance,\r\n                }}\r\n                options={{\r\n                  iconLayout: 'default#image',\r\n                  iconImageHref: pointer,\r\n                  iconImageSize: [100, 100],\r\n                  iconImageOffset: [, -100],\r\n                }}\r\n              />\r\n            )}\r\n          </Map>\r\n        </div>\r\n      </YMaps>\r\n    </div>\r\n  )\r\n})\r\n","import axios from 'axios';\r\nimport {PreviousCoordinatesType} from '../Components/SendForm/SendForm';\r\n\r\nconst yandexInstance = axios.create({\r\n  // withCredentials: true,\r\n  baseURL: 'https://geocode-maps.yandex.ru/1.x/',\r\n});\r\n// https://geocode-maps.yandex.ru/1.x/?apikey=62863b39-ff46-4e0f-a09b-34ed4079f28a&geocode=30.483445405960065,50.41855269383524\r\nexport const objectsYandexAPI = {\r\n  geocodeNewObject(latitude: string, longitude: string) {\r\n    return yandexInstance.get(`?geocode=${longitude},${latitude}`);\r\n  },\r\n}\r\n\r\n// axios.defaults.params = {};\r\nexport const setYandexInterceptors = (instance: any) => {\r\n  instance.interceptors.request.use(\r\n    async (config: any) => {\r\n      const apiKey = '62863b39-ff46-4e0f-a09b-34ed4079f28a'\r\n      const format = 'json'\r\n      config.params = {...config.params, apikey: apiKey, format: format}\r\n      return config;\r\n    },\r\n    (error: any) => Promise.reject(error)\r\n  );\r\n}\r\n\r\nsetYandexInterceptors(yandexInstance)\r\n\r\nconst googleInstance = axios.create({\r\n  // withCredentials: true,\r\n  baseURL: 'https://maps.googleapis.com/maps/api/distancematrix/',\r\n\r\n});\r\n\r\nexport const objectsGoogleAPI = {\r\n\r\n  // https://maps.googleapis.com/maps/api/distancematrix/json?origins=53.90600858542148,%2027.556119152511656&destinations=53.912066185896606,%2027.53531402203179&key=%20AIzaSyDZYmugNtrfSskRFo0Wa3QYPRva1AeiuwU\r\n  getDistance(latitude: string, longitude: string,previousCoordinates: PreviousCoordinatesType){\r\n    // debugger\r\n    return googleInstance.get(`json?origins=${latitude},%20${longitude}&destinations=${previousCoordinates[0]},%20${previousCoordinates[1]}&key=%20AIzaSyDZYmugNtrfSskRFo0Wa3QYPRva1AeiuwU`);\r\n  }\r\n}\r\n\r\n// export const setGoogleInterceptors = (instance: any) => {\r\n//   instance.interceptors.request.use(\r\n//     async (config: any) => {\r\n//       const apiKey = 'AIzaSyDZYmugNtrfSskRFo0Wa3QYPRva1AeiuwU'\r\n//       // const format = 'json'\r\n//       // config.params = {...config.params, apikey: apiKey, format: format}\r\n//       config.params = {...config.params, key: apiKey}\r\n//       return config;\r\n//     },\r\n//     (error: any) => Promise.reject(error)\r\n//   );\r\n// }\r\n//\r\n// setGoogleInterceptors(googleInstance)\r\n\r\n","import {InferActionsTypes} from './redux-store';\r\nimport {Dispatch} from 'react';\r\nimport {objectsGoogleAPI, objectsYandexAPI} from '../api/api';\r\nimport { PreviousCoordinatesType } from '../Components/SendForm/SendForm';\r\n\r\nexport type EmployeeFormikDataType = {\r\n  first_name: string\r\n  last_name: string\r\n}\r\n\r\nexport type DisplayObjectType = {\r\n  id: string,\r\n  latitude: string,\r\n  longitude: string,\r\n  address?: string,\r\n  lastPointDistance?: number\r\n}\r\n\r\ntype MapReducerType = {\r\n  displayObjects: Array<DisplayObjectType>\r\n};\r\n\r\nlet initialState: MapReducerType = {\r\n  displayObjects: []\r\n};\r\n\r\nexport const mapReducer = (state = initialState, action: ActionType): MapReducerType => {\r\n\r\n  switch (action.type) {\r\n    case 'MAP-REDUCER/ADD_OBJECT': {\r\n      return {...state, displayObjects: [...state.displayObjects, action.newObject]}\r\n    }\r\n    // case 'ADD_EMPLOYEE': {\r\n    //   return {...state, employees: [...state.employees, action.newEmployee]}\r\n    // }\r\n    // case 'DELETE_EMPLOYEE': {\r\n    //   return {...state, employees: state.employees.filter(emp => emp.id !== action.deletedUserId)}\r\n    // }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\ntype ActionType = InferActionsTypes<typeof actions>;\r\n\r\nexport const actions = {\r\n  addObject: (newObject: DisplayObjectType) => ({type: 'MAP-REDUCER/ADD_OBJECT', newObject} as const),\r\n  // addEmployee: (newEmployee: EmployeeType) => ({type: 'ADD_EMPLOYEE', newEmployee} as const),\r\n  // delEmployee: (deletedUserId: number) => ({type: 'DELETE_EMPLOYEE', deletedUserId} as const),\r\n}\r\n\r\ntype DispatchType = Dispatch<ActionType>;\r\n\r\n\r\nexport const geocodeNewObject = (newObject: DisplayObjectType, previousCoordinates: PreviousCoordinatesType) => {\r\n  return async (dispatch: DispatchType) => {\r\n    const geocodeData = await objectsYandexAPI.geocodeNewObject(newObject.latitude, newObject.longitude)\r\n    const distanceData = await objectsGoogleAPI.getDistance(newObject.latitude, newObject.longitude,previousCoordinates)\r\n    // // console.log('mapReducer::: data :', data.data.response.GeoObjectCollection.featureMember[0].GeoObject.metaDataProperty.GeocoderMetaData.Address.formatted)\r\n    //\r\n    // console.log('mapReducer::: distanceData :', distanceData)\r\n    debugger\r\n    newObject.address = geocodeData.data.response.GeoObjectCollection.featureMember[0].GeoObject.metaDataProperty.GeocoderMetaData.Address.formatted\r\n    dispatch(actions.addObject(newObject));\r\n  }\r\n}\r\n\r\nexport const addNewEmployees = (employeeFormikData: EmployeeFormikDataType) => {\r\n  // return async (dispatch: DispatchType) => {\r\n  //   const newEmployee = await employeesAPI.getcreateEmployee(employeeFormikData)\r\n  //   dispatch(actions.addEmployee(newEmployee));\r\n  // }\r\n}\r\n\r\nexport const deleteEmployees = (userId: number) => {\r\n  // return async (dispatch: DispatchType) => {\r\n  //   const deletedUserId = await employeesAPI.getUpdatedEmployees(userId)\r\n  //   if (deletedUserId) {\r\n  //     dispatch(actions.delEmployee(deletedUserId));\r\n  //   }\r\n  // }\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport Popover from '@material-ui/core/Popover';\r\n\r\ntype PopoverMessagePropsType = {\r\n  address: string | undefined\r\n}\r\n\r\nexport const PopoverMessage = ({address}: PopoverMessagePropsType) => {\r\n let [isOpen, setIsOpen] = useState<boolean>(true)\r\n// debugger\r\n  setTimeout(() => {\r\n    setIsOpen(false)\r\n  }, 2000)\r\n  return (\r\n    <Popover\r\n      // open={true}\r\n      open={isOpen}\r\n      anchorReference=\"anchorPosition\"\r\n      anchorPosition={{top: 0, left: 0}}\r\n      anchorOrigin={{\r\n        vertical: 'center',\r\n        horizontal: 'center',\r\n      }}\r\n      transformOrigin={{\r\n        vertical: 'center',\r\n        horizontal: 'center',\r\n      }}\r\n    >\r\n      {address}\r\n    </Popover>\r\n  );\r\n}\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport s from './SendForm.module.css';\r\nimport {useFormik} from 'formik';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport {TextField} from '@material-ui/core';\r\nimport {DisplayObjectType, geocodeNewObject} from '../../redux/map-reducer';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {PopoverMessage} from '../Popover/PopoverMessage';\r\n\r\ntype SendFormPropsType = {\r\n  currentObject: DisplayObjectType\r\n}\r\nexport type PreviousCoordinatesType = [string, string]\r\n\r\n\r\nexport const SendForm = ({currentObject}: SendFormPropsType) => {\r\n  let address = currentObject.address\r\n  useEffect(() => {\r\n    address = currentObject.address\r\n  }, [currentObject.address])\r\n\r\n  let [previousCoordinates, setPreviousCoordinates] = useState<PreviousCoordinatesType>(['', ''])\r\n\r\n  // console.log('currentObject in SendForm:', currentObject);\r\n  const dispatch = useDispatch();\r\n\r\n  // let address = currentObject.address\r\n  // if(currentDisplayObject?.id) {\r\n  //   address = currentDisplayObject.address\r\n  // }\r\n\r\n  const formik: any = useFormik({\r\n    initialValues: {\r\n      latitude: currentObject.latitude,\r\n      longitude: currentObject.longitude,\r\n      address: currentObject.address\r\n    },\r\n    onSubmit: values => {\r\n      // const {latitude, longitude} = values\r\n      dispatch(geocodeNewObject(currentObject, previousCoordinates));\r\n      setPreviousCoordinates([currentObject.latitude, currentObject.longitude])\r\n    },\r\n  });\r\n  // console.log('formik :', formik)\r\n  return (\r\n    <><PopoverMessage\r\n      address={address}\r\n    />\r\n      <div className={s.sendForm}>\r\n        SendForm\r\n        <form onSubmit={formik.handleSubmit}\r\n              noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"latitude\"\r\n            type=\"text\"\r\n            name=\"latitude\"\r\n            label=\"Latitude\"\r\n            autoFocus\r\n            onChange={formik.handleChange}\r\n            value={currentObject.latitude}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"longitude\"\r\n            name=\"longitude\"\r\n            label=\"Longitude\"\r\n            type=\"text\"\r\n            onChange={formik.handleChange}\r\n            value={currentObject.longitude}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"address\"\r\n            name=\"address\"\r\n            // label=\"Address\"\r\n            type=\"text\"\r\n            onChange={formik.handleChange}\r\n            value={address}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Geocode\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React from 'react';\r\nimport s from './RequestHistoryTable.module.css'\r\nimport { DataGrid, ColDef, ValueGetterParams } from '@material-ui/data-grid';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {DisplayObjectType} from '../../redux/map-reducer';\r\n\r\n\r\nexport const RequestHistoryTable = () => {\r\n\r\n  const rows = useSelector<AppStateType, Array<DisplayObjectType>>(state => state.mapPage.displayObjects);\r\n  console.log('Table:::: displayObjects :', rows);\r\n  return (\r\n    <div className={s.historyTable}>\r\n      <div style={{ height: 400, width: '100%' }}>\r\n        <DataGrid rows={rows} columns={columns} pageSize={5} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst columns: ColDef[] = [\r\n  // { field: 'id', headerName: 'ID', width: 70 },\r\n  { field: 'latitude', headerName: 'Latitude', width: 165 },\r\n  { field: 'longitude', headerName: 'Longitude', width: 165 },\r\n  {\r\n    field: 'address',\r\n    headerName: 'Address',\r\n    // type: 'number',\r\n    width: 300,\r\n  },\r\n  {\r\n    field: 'distance',\r\n    headerName: 'Distance',\r\n    description: 'This column has a value getter and is not sortable.',\r\n    // sortable: false,\r\n    width: 90,\r\n    valueGetter: (params: ValueGetterParams) =>\r\n      `${params.getValue('firstName') || ''} ${params.getValue('lastName') || ''}`,\r\n  },\r\n];\r\n\r\n// const rows = [\r\n//   { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },\r\n//   { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\r\n//   { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\r\n//   { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\r\n//   { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\r\n//   { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\r\n//   { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\r\n//   { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\r\n//   { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\r\n// ];\r\n","import React, {useCallback, useState} from 'react';\nimport './App.css';\nimport {YandexMap} from './Components/YandexMap/YandexMap';\nimport {SendForm} from './Components/SendForm/SendForm';\nimport {RequestHistoryTable} from './Components/RequestHistoryTable/RequestHistoryTable';\nimport {DisplayObjectType} from './redux/map-reducer';\nimport {v1} from 'uuid';\nimport {useSelector} from 'react-redux';\nimport {AppStateType} from './redux/redux-store';\n\n\nfunction App() {\n\n  const [currentObject, setCurrentObject] = useState<DisplayObjectType>({\n    id: '',\n    latitude: '',\n    longitude: ''\n  });\n\n  const displayObjects = useSelector<AppStateType, Array<DisplayObjectType>>(state => state.mapPage.displayObjects);\n\n  // console.log('App:::: displayObjects :', displayObjects);\n\n  const getMapCoordinates = useCallback((e: any) => {\n    let newObjectCoordinates = e.get('coords');\n    const newObject: DisplayObjectType = {\n      id: v1(),\n      latitude: newObjectCoordinates[0].toString(),\n      longitude: newObjectCoordinates[1].toString()\n    }\n    setCurrentObject(newObject);\n    console.log('newObject in App:', newObject)\n  }, [])\n  return (\n    <div className=\"App\">\n      <div>\n        <YandexMap\n          getMapCoordinates={getMapCoordinates}\n          displayObjects={displayObjects}\n        />\n      </div>\n      <div>\n          <SendForm\n            currentObject={currentObject}/>\n          <RequestHistoryTable/>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware } from \"redux\";\r\nimport { combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {mapReducer} from './map-reducer';\r\n\r\nlet reducers = combineReducers({\r\n  mapPage: mapReducer,\r\n});\r\n\r\nexport type AppStateType = ReturnType<typeof reducers>\r\n\r\ntype PropertiesTypes<T> = T extends { [key: string]: infer U } ? U : never;\r\n\r\nexport type InferActionsTypes<T extends { [key: string]: (...arg: any[]) => any }> = ReturnType<PropertiesTypes<T>>\r\n\r\nconst store: ReturnType<typeof createStore> = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './redux/redux-store';\n\nReactDOM.render(\n  <React.StrictMode>\n\n      {/*<Provider store={store}>*/}\n      <Provider store={store}>\n        <App/>\n      </Provider>\n\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"yandexMap\":\"YandexMap_yandexMap__Q1MUo\",\"Map\":\"YandexMap_Map__1wL9U\"};"],"sourceRoot":""}